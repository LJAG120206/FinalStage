{"ast":null,"code":"var _jsxFileName = \"/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Calendrier/Calendrier.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport './Calendriers.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Calendriers() {\n  _s();\n\n  const [weekEnd, setweekEnd] = useState(true);\n  const [boutonWeekEnd, setboutonWeekEnd] = useState(\"Masquer le weekend\"); //const [Dispo, setDispo] = useState([]);\n\n  const [eventGuid, setEventGuid] = useState(0);\n\n  const handleWeekend = () => {\n    if (weekEnd) {\n      setboutonWeekEnd(\"Afficher le weekend\");\n    } else {\n      setboutonWeekEnd(\"Masquer le weekend\");\n    }\n\n    setweekEnd(!weekEnd);\n  };\n\n  function createEventId() {\n    let nextEventGuid = eventGuid++;\n    setEventGuid(nextEventGuid);\n    return String(eventGuid);\n  }\n\n  function handleDateSelect(selectInfo) {\n    let title = prompt('Please enter a new title for your event');\n    let calendarApi = selectInfo.view.calendar;\n    calendarApi.unselect(); // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    }\n  } //   function handleEventClick (clickInfo) {\n  //     if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n  //       clickInfo.event.remove()\n  //     }\n  //   }\n\n\n  function handleEvents(events) {\n    this.setState({\n      currentEvents: events\n    });\n  }\n\n  function renderEventContent(eventInfo) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: eventInfo.timeText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: eventInfo.event.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleWeekend,\n      className: \"btn col-md-3 btn-info\",\n      children: boutonWeekEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n        initialView: \"timeGridWeek\",\n        weekends: weekEnd // dateClick = {handleDateClick}\n        ,\n        editable: true,\n        event: Dispo //eventClick={handleEventClick}\n        ,\n        select: handleDateSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Calendriers, \"AzqLlu7gWGP9dYxtfZ0d9wF3XkU=\");\n\n_c = Calendriers;\nexport default Calendriers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendriers\");","map":{"version":3,"sources":["/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Calendrier/Calendrier.js"],"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","timeGridPlugin","interactionPlugin","Calendriers","weekEnd","setweekEnd","boutonWeekEnd","setboutonWeekEnd","eventGuid","setEventGuid","handleWeekend","createEventId","nextEventGuid","String","handleDateSelect","selectInfo","title","prompt","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEvents","events","setState","currentEvents","renderEventContent","eventInfo","timeText","event","Dispo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport './Calendriers.css';\n\nfunction Calendriers() {\n\n  const [weekEnd, setweekEnd] = useState(true);\n  const [boutonWeekEnd, setboutonWeekEnd] = useState(\"Masquer le weekend\");\n  //const [Dispo, setDispo] = useState([]);\n  const [eventGuid, setEventGuid] = useState(0);\n\n  const handleWeekend = () =>{\n    if (weekEnd) {\n      setboutonWeekEnd(\"Afficher le weekend\")\n    }\n    else{\n      setboutonWeekEnd(\"Masquer le weekend\")\n    }\n    setweekEnd(!weekEnd);\n  }\n\n  function createEventId() {\n      let nextEventGuid = eventGuid++;\n      setEventGuid(nextEventGuid)\n    return String(eventGuid)\n  }\n\n  function handleDateSelect (selectInfo) {\n    let title = prompt('Please enter a new title for your event')\n    let calendarApi = selectInfo.view.calendar\n\n    calendarApi.unselect() // clear date selection\n\n    if (title) {\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      })\n    }\n  }\n\n//   function handleEventClick (clickInfo) {\n//     if (confirm(`Are you sure you want to delete the event '${clickInfo.event.title}'`)) {\n//       clickInfo.event.remove()\n//     }\n//   }\n\n  function handleEvents (events)  {\n    this.setState({\n      currentEvents: events\n    })\n  }\n\n  function renderEventContent(eventInfo) {\n    return (\n      <>\n        <b>{eventInfo.timeText}</b>\n        <i>{eventInfo.event.title}</i>\n      </>\n    )\n  }\n\n\n\n\n  return (\n    <div className=\"container\">        \n        <button onClick={handleWeekend} className=\"btn col-md-3 btn-info\">{boutonWeekEnd}</button>\n        <div className=\"card\" >\n          <FullCalendar\n            plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            initialView=\"timeGridWeek\"\n            weekends={weekEnd}\n            // dateClick = {handleDateClick}\n            editable = {true}\n            event = {Dispo}\n            //eventClick={handleEventClick}\n            select={handleDateSelect}\n          />\n        </div>\n    </div>\n  );\n}\n\n\nexport default Calendriers;\n"]},"metadata":{},"sourceType":"module"}