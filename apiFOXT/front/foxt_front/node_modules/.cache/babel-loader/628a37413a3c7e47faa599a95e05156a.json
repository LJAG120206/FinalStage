{"ast":null,"code":"var _jsxFileName = \"/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Chemins/Formulaires/CheminFormulaire.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport FieldInput from \"../../FieldInput/FieldInput\";\nimport { useParams } from \"react-router-dom\";\nimport TexteArea from \"../../TextArea/TexteArea\";\nimport Select from \"../../Select/Select\";\nimport Axios from \"axios\";\nimport \"./Formulaire.css\";\nimport axios from \"axios\";\nimport NavCustomerSuccess from \"../../CustomersSuccess/NavCustomerSuccess\";\nimport { Link } from \"react-router-dom\"; //import Logo from \"../Images/logo.png\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheminCreation = props => {\n  _s();\n\n  let {\n    id\n  } = useParams();\n  const [chemin, setChemin] = useState({\n    titre: \"\",\n    categories: \"\",\n    expertActif: \"\"\n  });\n  const [liste_categories, setListe_categories] = React.useState([]);\n  let categories;\n  const [liste_experts, setListe_experts] = React.useState([]);\n  let experts;\n  const [credentials, setCredentials] = useState({\n    message: \"\",\n    mail: \"\"\n  });\n  React.useEffect(() => {\n    Axios.get(\"https://127.0.0.1:8000/api/categories\").then(response => response.data[\"hydra:member\"]).then(categories => {\n      console.log(categories);\n      let liste_cat = [];\n      categories.forEach(item => {\n        liste_cat.push([item.id, item.titre]);\n      });\n      liste_cat.unshift([0, \"Selectionner une catÃ©gorie\"]);\n      setListe_categories(liste_cat);\n      console.log(liste_cat);\n      console.log(chemin);\n    });\n  }, []);\n  const [editing, setEditing] = useState(false);\n\n  const fetchChemin = async id => {\n    try {\n      const data = await axios.get(\"https://127.0.0.1:8000/api/chemins/\" + id).then(response => response.data);\n      console.log(data);\n      const {\n        titre,\n        status\n      } = data;\n      setChemin({\n        status,\n        titre\n      });\n      console.log(chemin);\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  useEffect(() => {\n    if (id !== \"new\") {\n      setEditing(true);\n      fetchChemin(id);\n    }\n  }, [id]);\n\n  const handleChange = _ref => {\n    let {\n      currentTarget\n    } = _ref;\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n    setChemin({ ...chemin,\n      [name]: value\n    });\n  };\n\n  const handleCategoriesChange = _ref2 => {\n    let {\n      currentTarget\n    } = _ref2;\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n    setChemin({ ...chemin,\n      [name]: value\n    });\n    Axios.get(\"https://127.0.0.1:8000/api/categories/\" + value + \"/experts\").then(response => response.data[\"hydra:member\"]).then(experts => {\n      console.log(experts);\n      let liste_exp = [];\n      experts.forEach(item => {\n        liste_exp.push([item.id, item.prenom + \" \" + item.nom]);\n      });\n      liste_exp.unshift([0, \"Selectionner un expert\"]);\n      setListe_experts(liste_exp);\n      console.log(liste_exp);\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    console.log(chemin);\n    delete chemin.categories;\n    chemin.expertActif = \"https://127.0.0.1:8000/api/experts/\" + chemin.expertActif;\n    chemin.status = \"ACTIF\";\n    console.log(chemin);\n\n    try {\n      const response = await Axios.put(\"https://127.0.0.1:8000/api/chemins/\" + id, chemin);\n      /*Prevoir envoi mail vers l'expert mandate qui acceptera ou non la mission\n      \n      .then (\n        console.log(\"test\"),\n        credentials.mail=[\"loic.lavernette@gmail.com\"],\n        credentials.message=[\"test message\"],\n        Axios\n            .post(\"http://localhost/foxt_partage/FOXT/Mail/\",credentials))\n        */\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavCustomerSuccess, {\n      id: localStorage.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row headerContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title fieldInput col-lg-8\",\n          children: \"OUVERTURE CHEMIN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"formulaire\",\n        className: \"container-fluid form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Select, {\n              id: \"categories\",\n              className: \"select col-lg-4\",\n              name: \"categories\",\n              label: \"Cat\\xE9gories\",\n              type: \"select\",\n              selected: \"\",\n              options: liste_categories,\n              value: chemin.categories,\n              onChange: handleCategoriesChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              id: \"expert\",\n              className: \"select col-lg-4\",\n              name: \"expertActif\",\n              label: \"Expert\",\n              type: \"select\",\n              selected: \"M.\",\n              options: liste_experts,\n              value: chemin.expertActif,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FieldInput, {\n              id: \"titre\",\n              className: \"fieldInput col-lg-4\",\n              label: \"Titre\",\n              type: \"text\",\n              name: \"titre\",\n              value: chemin.titre,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 14\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"btn btn-secondary btn-lg\",\n          type: \"submit\",\n          value: \"Envoyer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CheminCreation, \"hLeqCvGusIfH+5zTWNLGC4AXVlo=\", false, function () {\n  return [useParams];\n});\n\n_c = CheminCreation;\nexport default CheminCreation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheminCreation\");","map":{"version":3,"sources":["/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Chemins/Formulaires/CheminFormulaire.js"],"names":["React","useState","useEffect","FieldInput","useParams","TexteArea","Select","Axios","axios","NavCustomerSuccess","Link","CheminCreation","props","id","chemin","setChemin","titre","categories","expertActif","liste_categories","setListe_categories","liste_experts","setListe_experts","experts","credentials","setCredentials","message","mail","get","then","response","data","console","log","liste_cat","forEach","item","push","unshift","editing","setEditing","fetchChemin","status","error","handleChange","currentTarget","value","name","handleCategoriesChange","liste_exp","prenom","nom","handleSubmit","event","preventDefault","put","localStorage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAGA;;;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAEhC,MAAI;AAACC,IAAAA;AAAD,MAAOT,SAAS,EAApB;AAGA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC;AAGnCe,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,UAAU,EAAC,EAJwB;AAKnCC,IAAAA,WAAW,EAAE;AALsB,GAAD,CAApC;AASE,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CpB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAhD;AACA,MAAIgB,UAAJ;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCtB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA1C;AACA,MAAIsB,OAAJ;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCxB,QAAQ,CAAC;AAC7CyB,IAAAA,OAAO,EAAE,EADoC;AAE7CC,IAAAA,IAAI,EAAE;AAFuC,GAAD,CAA9C;AAMJ3B,EAAAA,KAAK,CAACE,SAAN,CAAgB,MACZ;AACEK,IAAAA,KAAK,CACAqB,GADL,CACS,uCADT,EAEKC,IAFL,CAEUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAc,cAAd,CAFtB,EAGKF,IAHL,CAGUZ,UAAU,IACd;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,UAAZ;AACA,UAAIiB,SAAS,GAAC,EAAd;AACEjB,MAAAA,UAAU,CAACkB,OAAX,CAAoBC,IAAD,IAAS;AACxBF,QAAAA,SAAS,CAACG,IAAV,CAAe,CAACD,IAAI,CAACvB,EAAN,EAAUuB,IAAI,CAACpB,KAAf,CAAf;AACH,OAFD;AAGAkB,MAAAA,SAAS,CAACI,OAAV,CAAkB,CAAC,CAAD,EAAG,4BAAH,CAAlB;AACAlB,MAAAA,mBAAmB,CAACc,SAAD,CAAnB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACD,KAdT;AAeD,GAjBL,EAiBM,EAjBN;AAmBE,QAAM,CAACyB,OAAD,EAAUC,UAAV,IAAwBvC,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMwC,WAAW,GAAG,MAAM5B,EAAN,IAAY;AAC9B,QAAI;AACF,YAAMkB,IAAI,GAAG,MAAMvB,KAAK,CACrBoB,GADgB,CACZ,wCAAwCf,EAD5B,EAEhBgB,IAFgB,CAEXC,QAAQ,IAAIA,QAAQ,CAACC,IAFV,CAAnB;AAGEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAM;AAACf,QAAAA,KAAD;AAAQ0B,QAAAA;AAAR,UAAkBX,IAAxB;AAEAhB,MAAAA,SAAS,CAAC;AAAC2B,QAAAA,MAAD;AAAS1B,QAAAA;AAAT,OAAD,CAAT;AACAgB,MAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AACH,KATD,CAUA,OAAO6B,KAAP,EAAa;AAACX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACb,QAAlB;AAA6B;AAE5C,GAbD;;AAcA5B,EAAAA,SAAS,CAAC,MAAI;AACd,QAAIW,EAAE,KAAK,KAAX,EAAkB;AAChB2B,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,MAAAA,WAAW,CAAC5B,EAAD,CAAX;AACA;AACD,GALQ,EAKN,CAACA,EAAD,CALM,CAAT;;AAOA,QAAM+B,YAAY,GAAG,QAAuB;AAAA,QAAtB;AAAEC,MAAAA;AAAF,KAAsB;AAC1C,UAAMC,KAAK,GAAGD,aAAa,CAACC,KAA5B;AACA,UAAMC,IAAI,GAAGF,aAAa,CAACE,IAA3B;AACAhC,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACiC,IAAD,GAAQD;AAArB,KAAD,CAAT;AACD,GAJD;;AAMA,QAAME,sBAAsB,GAAG,SAAuB;AAAA,QAAtB;AAAEH,MAAAA;AAAF,KAAsB;AACpD,UAAMC,KAAK,GAAGD,aAAa,CAACC,KAA5B;AACA,UAAMC,IAAI,GAAGF,aAAa,CAACE,IAA3B;AACAhC,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACiC,IAAD,GAAQD;AAArB,KAAD,CAAT;AACEvC,IAAAA,KAAK,CACIqB,GADT,CACa,2CAAyCkB,KAAzC,GAA+C,UAD5D,EAESjB,IAFT,CAEcC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAc,cAAd,CAF1B,EAGSF,IAHT,CAGcN,OAAO,IACX;AACES,MAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACA,UAAI0B,SAAS,GAAC,EAAd;AACE1B,MAAAA,OAAO,CAACY,OAAR,CAAiBC,IAAD,IAAS;AACrBa,QAAAA,SAAS,CAACZ,IAAV,CAAe,CAACD,IAAI,CAACvB,EAAN,EAAWuB,IAAI,CAACc,MAAL,GAAY,GAAZ,GAAgBd,IAAI,CAACe,GAAhC,CAAf;AACH,OAFD;AAGAF,MAAAA,SAAS,CAACX,OAAV,CAAkB,CAAC,CAAD,EAAG,wBAAH,CAAlB;AACAhB,MAAAA,gBAAgB,CAAC2B,SAAD,CAAhB;AACAjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,SAAZ;AACH,KAbX;AAeL,GAnBC;;AAqBA,QAAMG,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;AAEAtB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;AAEA,WAAOA,MAAM,CAACG,UAAd;AACAH,IAAAA,MAAM,CAACI,WAAP,GAAqB,wCAAsCJ,MAAM,CAACI,WAAlE;AACAJ,IAAAA,MAAM,CAAC4B,MAAP,GAAgB,OAAhB;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAYnB,MAAZ;;AAEA,QAAI;AACE,YAAMgB,QAAQ,GAAG,MAAMvB,KAAK,CAC3BgD,GADsB,CAEvB,wCAAwC1C,EAFjB,EAEqBC,MAFrB,CAAvB;AAIA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACS,KAdL,CAeA,OAAO6B,KAAP,EACI;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYU,KAAK,CAACb,QAAlB;AAA6B;AAC5B,GA5BP;;AA8BA,sBACE;AAAA,4BACE,QAAC,kBAAD;AAAoB,MAAA,EAAE,EAAE0B,YAAY,CAAC3C;AAArC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,+BAEE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AACE,QAAA,EAAE,EAAC,YADL;AAEE,QAAA,SAAS,EAAC,sBAFZ;AAGE,QAAA,QAAQ,EAAEuC,YAHZ;AAAA,gCAKE;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACA,QAAC,MAAD;AACI,cAAA,EAAE,EAAC,YADP;AAEI,cAAA,SAAS,EAAC,iBAFd;AAGI,cAAA,IAAI,EAAC,YAHT;AAII,cAAA,KAAK,EAAC,eAJV;AAKI,cAAA,IAAI,EAAC,QALT;AAMI,cAAA,QAAQ,EAAC,EANb;AAOI,cAAA,OAAO,EAAEjC,gBAPb;AAQI,cAAA,KAAK,EAAEL,MAAM,CAACG,UARlB;AASI,cAAA,QAAQ,EAAE+B;AATd;AAAA;AAAA;AAAA;AAAA,oBADA,eAaE,QAAC,MAAD;AACE,cAAA,EAAE,EAAC,QADL;AAEE,cAAA,SAAS,EAAC,iBAFZ;AAGE,cAAA,IAAI,EAAC,aAHP;AAIE,cAAA,KAAK,EAAC,QAJR;AAKE,cAAA,IAAI,EAAC,QALP;AAME,cAAA,QAAQ,EAAC,IANX;AAOE,cAAA,OAAO,EAAE3B,aAPX;AAQE,cAAA,KAAK,EAAEP,MAAM,CAACI,WARhB;AASE,cAAA,QAAQ,EAAE0B;AATZ;AAAA;AAAA;AAAA;AAAA,oBAbF,eA0BC,QAAC,UAAD;AACG,cAAA,EAAE,EAAC,OADN;AAEG,cAAA,SAAS,EAAC,qBAFb;AAGG,cAAA,KAAK,EAAC,OAHT;AAIG,cAAA,IAAI,EAAC,MAJR;AAKG,cAAA,IAAI,EAAC,OALR;AAMG,cAAA,KAAK,EAAE9B,MAAM,CAACE,KANjB;AAOG,cAAA,QAAQ,EAAE4B;AAPb;AAAA;AAAA;AAAA;AAAA,oBA1BD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eA4CE;AACE,UAAA,SAAS,EAAC,0BADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AA6DD,CAxLD;;GAAMjC,c;UAEOP,S;;;KAFPO,c;AA0LN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport FieldInput from \"../../FieldInput/FieldInput\";\nimport {useParams} from \"react-router-dom\"\nimport TexteArea from \"../../TextArea/TexteArea\";\nimport Select from \"../../Select/Select\";\nimport Axios from \"axios\";\nimport \"./Formulaire.css\";\nimport axios from \"axios\";\nimport NavCustomerSuccess from \"../../CustomersSuccess/NavCustomerSuccess\";\nimport { Link } from \"react-router-dom\";\n\n\n//import Logo from \"../Images/logo.png\";\n\n\nconst CheminCreation = (props) => {\n \n  let {id} = useParams();\n \n  \n  const [chemin, setChemin] = useState({\n   \n   \n    titre: \"\",\n    categories:\"\",\n    expertActif: \"\"\n    \n    \n });\n    const [liste_categories, setListe_categories] = React.useState([]);\n    let categories;\n    const [liste_experts, setListe_experts] = React.useState([]);\n    let experts;\n    const [credentials, setCredentials] = useState({\n      message: \"\",\n      mail: \"\"\n  });\n\n\nReact.useEffect(() =>\n    {\n      Axios\n          .get(\"https://127.0.0.1:8000/api/categories\")\n          .then(response => response.data[\"hydra:member\"])\n          .then(categories => \n            { \n              console.log(categories);             \n              let liste_cat=[];\n                categories.forEach((item) =>{\n                    liste_cat.push([item.id, item.titre]);\n                })\n                liste_cat.unshift([0,\"Selectionner une catÃ©gorie\"])\n                setListe_categories(liste_cat);\n                console.log(liste_cat);\n                console.log(chemin)\n              })\n    },[])\n\n  const [editing, setEditing] = useState(false);\n\n  const fetchChemin = async id => {\n    try {\n      const data = await axios\n        .get(\"https://127.0.0.1:8000/api/chemins/\" + id)\n        .then(response => response.data);\n        console.log(data);\n        const {titre, status} = data;\n        \n        setChemin({status, titre});\n        console.log(chemin)\n    }\n    catch (error){console.log(error.response);}\n    \n  }\n  useEffect(()=>{\n  if (id !== \"new\") {\n    setEditing(true);\n    fetchChemin(id)\n   }\n  }, [id]);\n  \n  const handleChange = ({ currentTarget }) => {\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n    setChemin({ ...chemin, [name]: value });\n  };\n\n  const handleCategoriesChange = ({ currentTarget }) => {\n    const value = currentTarget.value;\n    const name = currentTarget.name;\n    setChemin({ ...chemin, [name]: value });\n      Axios\n              .get(\"https://127.0.0.1:8000/api/categories/\"+value+\"/experts\")\n              .then(response => response.data[\"hydra:member\"])\n              .then(experts => \n                { \n                  console.log(experts);             \n                  let liste_exp=[];\n                    experts.forEach((item) =>{\n                        liste_exp.push([item.id,  item.prenom+\" \"+item.nom]);\n                    })\n                    liste_exp.unshift([0,\"Selectionner un expert\"])\n                    setListe_experts(liste_exp);\n                    console.log(liste_exp);\n                })\n      \n};\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    \n    console.log(chemin);\n    \n    delete(chemin.categories);\n    chemin.expertActif = \"https://127.0.0.1:8000/api/experts/\"+chemin.expertActif;\n    chemin.status = \"ACTIF\";\n    console.log(chemin);\n        \n    try {\n          const response = await Axios\n          .put(\n          \"https://127.0.0.1:8000/api/chemins/\" + id, chemin)\n\n          /*Prevoir envoi mail vers l'expert mandate qui acceptera ou non la mission\n          \n          .then (\n            console.log(\"test\"),\n            credentials.mail=[\"loic.lavernette@gmail.com\"],\n            credentials.message=[\"test message\"],\n            Axios\n                .post(\"http://localhost/foxt_partage/FOXT/Mail/\",credentials))\n            */\n        } \n    catch (error) \n        {\n        console.log(error.response);}\n        };\n          \n  return (\n    <>\n      <NavCustomerSuccess id={localStorage.id} />\n      <div>\n        <div className=\"row headerContainer\">\n         \n          <div className=\"title fieldInput col-lg-8\">OUVERTURE CHEMIN</div>\n        </div>\n        <form\n          id=\"formulaire\"\n          className=\"container-fluid form\"\n          onSubmit={handleSubmit}\n        >\n          <div>\n            <div className=\"row\">\n            <Select\n                id=\"categories\"\n                className=\"select col-lg-4\"\n                name=\"categories\"\n                label=\"CatÃ©gories\"\n                type=\"select\"\n                selected=\"\"\n                options={liste_categories}\n                value={chemin.categories}\n                onChange={handleCategoriesChange}\n              />\n\n              <Select\n                id=\"expert\"\n                className=\"select col-lg-4\"\n                name=\"expertActif\"\n                label=\"Expert\"\n                type=\"select\"\n                selected=\"M.\"\n                options={liste_experts}\n                value={chemin.expertActif}\n                onChange={handleChange}\n                />\n\n            \n             <FieldInput\n                id=\"titre\"\n                className=\"fieldInput col-lg-4\"\n                label=\"Titre\"\n                type=\"text\"\n                name=\"titre\"\n                value={chemin.titre}\n                onChange={handleChange}\n              />\n              \n            </div>\n          </div>\n          <input\n            className=\"btn btn-secondary btn-lg\"\n            type=\"submit\"\n            value=\"Envoyer\"\n          />\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default CheminCreation;\n"]},"metadata":{},"sourceType":"module"}