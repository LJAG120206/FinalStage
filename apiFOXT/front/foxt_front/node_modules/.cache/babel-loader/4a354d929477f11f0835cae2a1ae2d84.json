{"ast":null,"code":"var _jsxFileName = \"/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Calendrier/Calendrier.js\";\nimport React from 'react';\nimport FullCalendar, { formatDate } from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { createEventId } from './event-utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Calendrier extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      weekendsVisible: false,\n      currentEvents: []\n    };\n    this.INITIAL_EVENTS = [];\n\n    this.handleWeekendsToggle = () => {\n      this.setState({\n        weekendsVisible: !this.state.weekendsVisible\n      });\n    };\n\n    this.handleDateSelect = selectInfo => {\n      let title = \"Disponible\";\n      let calendarApi = selectInfo.view.calendar;\n      calendarApi.unselect();\n      calendarApi.addEvent({\n        id: createEventId(),\n        title,\n        start: selectInfo.startStr,\n        end: selectInfo.endStr,\n        allDay: selectInfo.allDay\n      });\n    };\n\n    this.handleEventClick = clickInfo => {\n      clickInfo.event.remove();\n    };\n\n    this.handleEvents = events => {\n      this.setState({\n        currentEvents: events\n      });\n    };\n\n    this.renderEventContent = eventInfo => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: eventInfo.timeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n          children: eventInfo.event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.ValidateMyDispo = () => {\n      console.log(this.state.currentEvents);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendrier\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendrier-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2 d-md-flex justify-content-md-end\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary btn-sm\",\n            onClick: this.handleWeekendsToggle,\n            children: [this.state.weekendsVisible ? \"Masquer\" : \"Afficher\", \" les week-end\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success\",\n            onClick: this.ValidateMyDispo,\n            children: \"Valider mes disponibilit\\xE9s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          timeZone: \"local\",\n          plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n          headerToolbar: {\n            left: 'prev,next today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay'\n          },\n          height: 560,\n          initialView: \"timeGridWeek\",\n          allDaySlot: false,\n          editable: true,\n          selectable: true,\n          selectMirror: true,\n          dayMaxEvents: true,\n          weekends: this.state.weekendsVisible,\n          initialEvents: this.INITIAL_EVENTS // pour tester des rdv de base (utile sur interface clients)\n          ,\n          select: this.handleDateSelect,\n          eventContent: this.renderEventContent,\n          eventClick: this.handleEventClick,\n          eventsSet: this.handleEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/var/www/FOXT/apiFOXT/front/foxt_front/src/Components/Calendrier/Calendrier.js"],"names":["React","FullCalendar","formatDate","dayGridPlugin","timeGridPlugin","interactionPlugin","createEventId","Calendrier","Component","state","weekendsVisible","currentEvents","INITIAL_EVENTS","handleWeekendsToggle","setState","handleDateSelect","selectInfo","title","calendarApi","view","calendar","unselect","addEvent","id","start","startStr","end","endStr","allDay","handleEventClick","clickInfo","event","remove","handleEvents","events","renderEventContent","eventInfo","timeText","ValidateMyDispo","console","log","render","left","center","right"],"mappings":"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","sourcesContent":["import React from 'react'\nimport FullCalendar, { formatDate } from '@fullcalendar/react'\nimport dayGridPlugin from '@fullcalendar/daygrid'\nimport timeGridPlugin from '@fullcalendar/timegrid'\nimport interactionPlugin from '@fullcalendar/interaction'\nimport { createEventId } from './event-utils'\n\nexport default class Calendrier extends React.Component {\n\n  state = {\n    weekendsVisible: false,\n    currentEvents: []\n  }\n\n  INITIAL_EVENTS = [] // utile pour interface clients\n\n  \n  handleWeekendsToggle = () => {\n    this.setState({\n      weekendsVisible: !this.state.weekendsVisible\n    })\n  }\n\n  handleDateSelect = (selectInfo) => {\n    let title = \"Disponible\"\n    let calendarApi = selectInfo.view.calendar\n\n    calendarApi.unselect() \n\n    calendarApi.addEvent({\n    id: createEventId(),\n    title,\n    start: selectInfo.startStr,\n    end: selectInfo.endStr,\n    allDay: selectInfo.allDay\n    })\n    \n  }\n\n  handleEventClick = (clickInfo) => {\n    clickInfo.event.remove()\n  }\n\n  handleEvents = (events) => {\n    this.setState({\n      currentEvents: events\n    })\n  }\n\n  \n  renderEventContent = (eventInfo) => {\n    return (\n      <>\n        <b>{eventInfo.timeText}</b>\n        <i>{eventInfo.event.title}</i>\n      </>\n    )\n  }\n\n  ValidateMyDispo = () =>{\n    console.log(this.state.currentEvents);\n  }\n\n  render() {\n    return (\n      <div className='calendrier'>\n        <div className='calendrier-main'>\n            <hr />\n          <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n            <button className='btn btn-secondary btn-sm' onClick={this.handleWeekendsToggle}>{this.state.weekendsVisible ? \"Masquer\" : \"Afficher\"} les week-end</button>\n            <button className='btn btn-success' onClick={this.ValidateMyDispo}>Valider mes disponibilités</button>\n          </div>\n          <hr />\n          <br />\n          <FullCalendar\n            timeZone='local'\n            plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n            headerToolbar={{\n              left: 'prev,next today',\n              center: 'title',\n              right: 'dayGridMonth,timeGridWeek,timeGridDay'\n            }}\n            height = {560}\n            initialView='timeGridWeek'\n            allDaySlot = {false}\n            editable={true}\n            selectable={true}\n            selectMirror={true}\n            dayMaxEvents={true}\n            weekends={this.state.weekendsVisible}\n            initialEvents={this.INITIAL_EVENTS} // pour tester des rdv de base (utile sur interface clients)\n            select={this.handleDateSelect}\n            eventContent={this.renderEventContent}\n            eventClick={this.handleEventClick}\n            eventsSet={this.handleEvents}\n          />\n        </div>\n      </div>\n    )\n  }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}